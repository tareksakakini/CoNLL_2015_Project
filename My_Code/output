{Exp_1_Arg1 {Exp_0_conn_Condition If Exp_0_conn} {Exp_0_Arg2 there is no element with the given id , Exp_0_Arg2} {Exp_0_Arg1 this function returns null . Exp_0_Arg1} Exp_1_Arg1}
{NonExp_0_Arg1 {Exp_1_Arg2 Note {Exp_1_conn_Conjunction also Exp_1_conn} that the DOM implementation must have information that says which attributes are of type ID . Exp_1_Arg2} NonExp_0_Arg1}
{NonExp_1_Arg1 {NonExp_0_Arg2_EntRel Attributes with the name `` id '' are not of type ID unless so defined in the document 's DTD . NonExp_0_Arg2} NonExp_1_Arg1}
{NonExp_2_Arg1 {NonExp_1_Arg2_Cause The id attribute is defined to be of ID type in the common cases of XHTML , XUL , and other . NonExp_1_Arg2} NonExp_2_Arg1}
{NonExp_2_Arg2_Cause Implementations that do not know whether attributes are of type ID or not are expected to return null . NonExp_2_Arg2}

{NonExp_3_Arg1 Simply creating an element and assigning an ID will not make the element accessible by getElementById . NonExp_3_Arg1}
{NonExp_3_Arg2_Contrast {Exp_2_Arg1 OK . Exp_2_Arg1} NonExp_3_Arg2}
{Exp_2_conn_Alternative Instead Exp_2_conn} {Exp_2_Arg2 one needs to insert the element first into the document tree with insertBefore or a similar method , probably into a hidden div . Exp_2_Arg2}

